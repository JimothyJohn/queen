FROM nvcr.io/nvidia/pytorch:23.07-py3

RUN wget \
    https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && mkdir /root/.conda \
    && bash Miniconda3-latest-Linux-x86_64.sh -b \
    && rm -f Miniconda3-latest-Linux-x86_64.sh 

ENV PATH="/root/miniconda3/bin:${PATH}"
ARG PATH="/root/miniconda3/bin:${PATH}"

RUN conda config --set ssl_verify no
RUN conda install -y -c conda-forge libstdcxx-ng
RUN conda install -y python==3.12.0 pytorch==2.5.0 torchvision==0.20.0 -c pytorch -c nvidia
RUN conda install plyfile tqdm -c conda-forge
ADD ./submodules ./submodules
RUN pip install setuptools
RUN pip3.10 install submodules/simple-knn
RUN apt-get update && apt-get install libgl1 -y
RUN pip install opencv-python scipy wandb six
WORKDIR /workspace/submodules/diff-gaussian-rasterization
RUN pip3.10 install .
WORKDIR /workspace/submodules/gaussian-rasterization-grad
RUN apt-get install libglm-dev
RUN pip3.10 install .
WORKDIR /workspace
RUN pip3.10 install torchmetrics imutils einops==0.6.0 timm==0.6.12 matplotlib
COPY ./maxxvit.py /root/miniconda3/lib/python3.11/site-packages/timm/models/maxxvit.py


# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    CUDA_HOME=/usr/local/cuda \
    # Include Pascal, Volta, Turing, and Ampere architectures for  SVOX build
    TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6+PTX"
    # Colmap variables
    # CUDA_ARCHITECTURES=native
    # COLMAP_GIT_COMMIT=main
    # PYTHONPATH=/4DGaussians/submodules/simple-knn

RUN apt-get update && \
    apt-get install --no-install-recommends -y \
        wget \
        git \
        zip \
        ninja-build \
        ffmpeg \
        # Colmap dependencies
        cmake \
        build-essential \
        libboost-program-options-dev \
        libboost-graph-dev \
        libboost-system-dev \
        libeigen3-dev \
        libflann-dev \
        libfreeimage-dev \
        libmetis-dev \
        libgoogle-glog-dev \
        libgtest-dev \
        libgmock-dev \
        libsqlite3-dev \
        libglew-dev \
        qtbase5-dev \
        libqt5opengl5-dev \
        libcgal-dev \
        libceres-dev \
        libcurl4-openssl-dev \
        # 4DGaussians dependencies
        python3.10-tk && \
    rm -rf /var/lib/apt/lists/*

# Install Colmap
ARG COLMAP_GIT_COMMIT="3.11.1"
ARG CUDA_ARCHITECTURES="60-real;61-real;70-real;75-real;80-real;86-real"
# https://github.com/colmap/colmap/blob/1f7f28ae1b282286cdd243d14e600f39fdde60d4/docker/Dockerfile#L41
RUN git clone https://github.com/colmap/colmap.git /colmap && \
    cd /colmap && \
    git fetch https://github.com/colmap/colmap.git ${COLMAP_GIT_COMMIT} && \
    git checkout 3.11.1 && \
    mkdir build && \
    cd build && \
    cmake .. -GNinja -DCMAKE_CUDA_ARCHITECTURES=${CUDA_ARCHITECTURES} && \
    ninja install

COPY requirements.txt /tmp/requirements.txt
RUN pip3.10 install --no-cache-dir -r /tmp/requirements.txt

# RUN echo "/root/miniconda3/lib" > /etc/ld.so.conf.d/conda.conf
# # https://github.com/horovod/horovod/issues/2187#issuecomment-1238239742
# RUN ldconfig

